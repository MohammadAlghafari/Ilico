// Mocks generated by Mockito 5.3.2 from annotations
// in charja_charity/test/features/add_section/data/usecase/upload_file_usecase.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:charja_charity/core/data_source/model.dart' as _i12;
import 'package:charja_charity/core/errors/base_error.dart' as _i14;
import 'package:charja_charity/core/results/result.dart' as _i2;
import 'package:charja_charity/features/profile/data/model/get_product_model.dart'
    as _i10;
import 'package:charja_charity/features/profile/data/model/profile_model.dart'
    as _i5;
import 'package:charja_charity/features/profile/data/profile_repository/profile_repository.dart'
    as _i3;
import 'package:charja_charity/features/profile/data/use_case/edit_company_service_provider.dart'
    as _i8;
import 'package:charja_charity/features/profile/data/use_case/edit_profile_usecase.dart'
    as _i7;
import 'package:charja_charity/features/profile/data/use_case/get_product_usecase.dart'
    as _i11;
import 'package:charja_charity/features/profile/data/use_case/profile_usecase.dart'
    as _i6;
import 'package:charja_charity/features/profile/data/use_case/social_data_usecase.dart'
    as _i9;
import 'package:dartz/dartz.dart' as _i13;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeResult_0<Data> extends _i1.SmartFake implements _i2.Result<Data> {
  _FakeResult_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [ProfileRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockProfileRepository extends _i1.Mock implements _i3.ProfileRepository {
  MockProfileRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Result<_i5.UserInfo>> getProfile(
          {required _i6.ProfileParams? params}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getProfile,
          [],
          {#params: params},
        ),
        returnValue: _i4.Future<_i2.Result<_i5.UserInfo>>.value(
            _FakeResult_0<_i5.UserInfo>(
          this,
          Invocation.method(
            #getProfile,
            [],
            {#params: params},
          ),
        )),
      ) as _i4.Future<_i2.Result<_i5.UserInfo>>);
  @override
  _i4.Future<_i2.Result<_i5.UserInfo>> editProfile(
          {required _i7.EditProfileParams? params}) =>
      (super.noSuchMethod(
        Invocation.method(
          #editProfile,
          [],
          {#params: params},
        ),
        returnValue: _i4.Future<_i2.Result<_i5.UserInfo>>.value(
            _FakeResult_0<_i5.UserInfo>(
          this,
          Invocation.method(
            #editProfile,
            [],
            {#params: params},
          ),
        )),
      ) as _i4.Future<_i2.Result<_i5.UserInfo>>);
  @override
  _i4.Future<_i2.Result<_i5.Company>> editCompany(
          {required _i8.EditCompanyProfileParams? params}) =>
      (super.noSuchMethod(
        Invocation.method(
          #editCompany,
          [],
          {#params: params},
        ),
        returnValue: _i4.Future<_i2.Result<_i5.Company>>.value(
            _FakeResult_0<_i5.Company>(
          this,
          Invocation.method(
            #editCompany,
            [],
            {#params: params},
          ),
        )),
      ) as _i4.Future<_i2.Result<_i5.Company>>);
  @override
  _i4.Future<_i2.Result<_i5.UserInfo>> update_social_media_data(
          {required _i9.SocialDataParams? params}) =>
      (super.noSuchMethod(
        Invocation.method(
          #update_social_media_data,
          [],
          {#params: params},
        ),
        returnValue: _i4.Future<_i2.Result<_i5.UserInfo>>.value(
            _FakeResult_0<_i5.UserInfo>(
          this,
          Invocation.method(
            #update_social_media_data,
            [],
            {#params: params},
          ),
        )),
      ) as _i4.Future<_i2.Result<_i5.UserInfo>>);
  @override
  _i4.Future<_i2.Result<List<_i10.GetproductModel>>> getProduct(
          {required _i11.GetProductParams? params}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getProduct,
          [],
          {#params: params},
        ),
        returnValue: _i4.Future<_i2.Result<List<_i10.GetproductModel>>>.value(
            _FakeResult_0<List<_i10.GetproductModel>>(
          this,
          Invocation.method(
            #getProduct,
            [],
            {#params: params},
          ),
        )),
      ) as _i4.Future<_i2.Result<List<_i10.GetproductModel>>>);
  @override
  String urlAccordingType({required _i11.GetProductParams? params}) =>
      (super.noSuchMethod(
        Invocation.method(
          #urlAccordingType,
          [],
          {#params: params},
        ),
        returnValue: '',
      ) as String);
  @override
  _i2.Result<Model> call<Model extends _i12.BaseModel>(
          {required _i13.Either<_i14.BaseError, _i12.BaseModel>? result}) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [],
          {#result: result},
        ),
        returnValue: _FakeResult_0<Model>(
          this,
          Invocation.method(
            #call,
            [],
            {#result: result},
          ),
        ),
      ) as _i2.Result<Model>);
  @override
  _i2.Result<List<Model>> paginatedCall<Model extends _i12.BaseModel>(
          {required _i13.Either<_i14.BaseError, _i12.BaseModel>? result}) =>
      (super.noSuchMethod(
        Invocation.method(
          #paginatedCall,
          [],
          {#result: result},
        ),
        returnValue: _FakeResult_0<List<Model>>(
          this,
          Invocation.method(
            #paginatedCall,
            [],
            {#result: result},
          ),
        ),
      ) as _i2.Result<List<Model>>);
  @override
  _i2.Result<bool> noModelCall(
          {required _i13.Either<_i14.BaseError, bool>? result}) =>
      (super.noSuchMethod(
        Invocation.method(
          #noModelCall,
          [],
          {#result: result},
        ),
        returnValue: _FakeResult_0<bool>(
          this,
          Invocation.method(
            #noModelCall,
            [],
            {#result: result},
          ),
        ),
      ) as _i2.Result<bool>);
}
